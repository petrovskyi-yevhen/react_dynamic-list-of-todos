{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Filter.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selected","onSelected","className","map","id","title","completed","userId","classNames","type","onClick","TodoFilter","query","setQuery","filterBy","setFilterBy","onSubmit","event","preventDefault","name","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoModal","onClose","useState","selectedUser","setSelectedUser","loading","setLoading","useEffect","finally","href","email","App","setTodos","selectedTodo","setSelectedTodo","all","filteredTodos","useMemo","copyTodos","length","filter","todo","toLowerCase","includes","active","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f514956.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selected: Todo | null,\n  onSelected: (todo: Todo | null) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selected,\n  onSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        userId,\n      }) => (\n        <tr\n          key={id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selected?.id === id,\n          })}\n        >\n          <td className=\"is-vcentered\">{id}</td>\n          {completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': completed,\n              'has-text-danger': !completed,\n            })}\n            >\n              {title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelected({\n                id,\n                title,\n                completed,\n                userId,\n              })}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': selected?.id !== id,\n                  'fa-eye-slash': selected?.id === id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string,\n  setQuery: (newQuery: string) => void,\n  filterBy: Filter,\n  setFilterBy: (filter: Filter) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filterBy,\n  setFilterBy,\n}) => (\n  <form\n    className=\"field has-addons\"\n    onSubmit={(event) => event.preventDefault()}\n  >\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          name=\"filterBy\"\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={(event) => setFilterBy(event.target.value as Filter)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        name=\"input\"\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selected: Todo,\n  onClose: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selected,\n  onClose,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getUser(selected.userId)\n      .then(setSelectedUser)\n      .finally(() => setLoading(false));\n  }, [selected]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selected.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.all);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    let copyTodos = [...todos];\n\n    if (query.length) {\n      copyTodos = copyTodos\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    switch (filterBy) {\n      case Filter.active:\n        return copyTodos.filter(item => !item.completed);\n\n      case Filter.completed:\n        return copyTodos.filter(item => item.completed);\n\n      default:\n        return copyTodos;\n    }\n  }, [query, filterBy, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && !!todos.length && (\n                <TodoList\n                  todos={filteredTodos}\n                  selected={selectedTodo}\n                  onSelected={setSelectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selected={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}